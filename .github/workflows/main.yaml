name: Workflow checks

on:
  push:
    branches:
      - master
      - smk_wf_catalog

jobs:
  ##########
  #TMP
  build_container:
    name: Build and push image
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: ashleys-qc-pipeline

    # if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: Read upstream tag without version
        id: gettag
        run: echo "::set-output name=tag::$(head -n 1 github-actions-runner/Dockerfile | awk -F':' '{print $2}' | awk -F'-' 'BEGIN { OFS="-" } {$NF=""; print $0}')"

      - name: Read internal update version
        id: getversion
        run: echo "::set-output name=version::$(grep 'ARG RUNNER_VERSION' github-actions-runner/Dockerfile | awk -F'=' '{print $2}')"

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: "1.0"
          dockerfiles: |
            ./github-actions-runner/Dockerfile

      - name: Push To DockerHub
        id: push-to-dockerhub
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: docker.io/weber8thomas
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Use the image
        run: echo "New images has been pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
  ##########
  # WORK
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Linting
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./Snakefile
          args: "--lint"
  # Testing:
  #   runs-on: ubuntu-latest
  #   # needs:
  #   #   - Linting
  #   #   - Formatting
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Testing data
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./Snakefile
  #         stagein: " mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda snakemake pandas pysam tqdm imagemagick && source activate snakemake"
  #         args: "--cores 2 --configfile .tests/config/test_config.yaml  --use-conda"
